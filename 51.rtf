{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue255;\red0\green0\blue0;
\red32\green108\blue135;\red0\green0\blue109;\red101\green76\blue29;\red157\green0\blue210;\red144\green1\blue18;
\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c14902\c49804\c60000;\cssrgb\c0\c6275\c50196;\cssrgb\c47451\c36863\c14902;\cssrgb\c68627\c0\c85882;\cssrgb\c63922\c8235\c8235;
\cssrgb\c3529\c52549\c34510;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
class\cf0  \cf5 Solution\cf0  \{\cb1 \
\cb3     \cf5 List\cf0 <\cf5 List\cf0 <\cf5 String\cf0 >> \cf6 ans\cf0 ;\cb1 \
\cb3     \cf5 char\cf0 [][] \cf6 board\cf0 ;\cb1 \
\
\cb3     \cf2 public\cf0  \cf5 List\cf0 <\cf5 List\cf0 <\cf5 String\cf0 >> \cf7 solveNQueens\cf0 (\cf5 int\cf0  \cf6 N\cf0 ) \{\cb1 \
\cb3         ans = \cf8 new\cf0  \cf5 ArrayList\cf0 <>();\cb1 \
\cb3         board = \cf8 new\cf0  \cf5 char\cf0 [N][N];\cb1 \
\cb3         \cf8 for\cf0  (\cf5 char\cf0 [] \cf6 row\cf0  \cf8 :\cf0  board) \cf6 Arrays\cf0 .\cf7 fill\cf0 (row, \cf9 '.'\cf0 );\cb1 \
\cb3         \cf7 place\cf0 (\cf10 0\cf0 ,\cf10 0\cf0 ,\cf10 0\cf0 ,\cf10 0\cf0 );\cb1 \
\cb3         \cf8 return\cf0  ans;\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf2 private\cf0  \cf5 void\cf0  \cf7 place\cf0 (\cf5 int\cf0  \cf6 i\cf0 , \cf5 int\cf0  \cf6 vert\cf0 , \cf5 int\cf0  \cf6 ldiag\cf0 , \cf5 int\cf0  \cf6 rdiag\cf0 ) \{\cb1 \
\cb3         \cf5 int\cf0  \cf6 N\cf0  = \cf6 board\cf0 .\cf6 length\cf0 ;\cb1 \
\cb3         \cf8 if\cf0  (i == N) \{\cb1 \
\cb3             \cf5 List\cf0 <\cf5 String\cf0 > \cf6 res\cf0  = \cf8 new\cf0  \cf5 ArrayList\cf0 <>();\cb1 \
\cb3             \cf8 for\cf0  (\cf5 char\cf0 [] \cf6 row\cf0  \cf8 :\cf0  board) \cf6 res\cf0 .\cf7 add\cf0 (\cf8 new\cf0  \cf7 String\cf0 (row));\cb1 \
\cb3             \cf6 ans\cf0 .\cf7 add\cf0 (res);\cb1 \
\cb3             \cf8 return\cf0 ;\cb1 \
\cb3         \}\cb1 \
\cb3         \cf8 for\cf0  (\cf5 int\cf0  \cf6 j\cf0  = \cf10 0\cf0 ; j < N; j++) \{\cb1 \
\cb3             \cf5 int\cf0  \cf6 vmask\cf0  = \cf10 1\cf0  << j, lmask = \cf10 1\cf0  << (i+j), rmask = \cf10 1\cf0  << (N-i-\cf10 1\cf0 +j);\cb1 \
\cb3             \cf8 if\cf0  ((vert & vmask) + (ldiag & lmask) + (rdiag & rmask) > \cf10 0\cf0 ) \cf8 continue\cf0 ;\cb1 \
\cb3             board[i][j] = \cf9 'Q'\cf0 ;\cb1 \
\cb3             \cf7 place\cf0 (i+\cf10 1\cf0 , vert | vmask, ldiag | lmask, rdiag | rmask);\cb1 \
\cb3             board[i][j] = \cf9 '.'\cf0 ;\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
}